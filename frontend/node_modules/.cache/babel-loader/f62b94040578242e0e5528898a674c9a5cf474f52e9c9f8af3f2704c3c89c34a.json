{"ast":null,"code":"var _jsxFileName = \"C:\\\\udemy-react\\\\multipage-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details of selected elements'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/udemy-react/multipage-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, json } from \"react-router-dom\"\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n\r\n  const params = useParams();\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <EventItem />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventDetailPage \r\n\r\n\r\nexport async function loader({request, params}) {\r\n  const id = params.eventId\r\n  const response = await fetch('http://localhost:8080/events/' + id)\r\n  if(!response.ok){\r\n    throw json({ message: 'Could not fetch details of selected elements' },\r\n      { status: 500 });\r\n  }else{\r\n    return response;\r\n  }\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAG1B,oBACEI,OAAA;IAAAI,QAAA,eACEJ,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAAN,EAAA,CAVKD,eAAe;EAAA,QAEJL,SAAS;AAAA;AAAAa,EAAA,GAFpBR,eAAe;AAYrB,eAAeA,eAAe;AAG9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAER;AAAM,CAAC,EAAE;EAC9C,MAAMS,EAAE,GAAGT,MAAM,CAACU,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAA+C,CAAC,EACpE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpB,CAAC,MAAI;IACH,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}