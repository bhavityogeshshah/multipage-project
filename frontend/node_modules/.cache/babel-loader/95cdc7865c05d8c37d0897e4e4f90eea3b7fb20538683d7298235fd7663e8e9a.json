{"ast":null,"code":"var _jsxFileName = \"C:\\\\udemy-react\\\\multipage-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  parmas\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    console.log(response);\n    throw json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","parmas","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","console","log","message","$RefreshReg$"],"sources":["C:/udemy-react/multipage-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\"\r\nimport { json, redirect } from \"react-router-dom\"\r\n\r\nconst NewEventPage = () => {\r\n  return (\r\n    <div>\r\n      <EventForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewEventPage\r\n\r\nexport async function action({ request, parmas }) {\r\n  const data = await request.formData();\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image: data.get('image'),\r\n    date: data.get('date'),\r\n    description: data.get('description'),\r\n  }\r\n\r\n  const response = await fetch('http://localhost:8080/events', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(eventData)\r\n  });\r\n\r\n  if(response.status === 422){\r\n    return response;    \r\n  }\r\n\r\n  if (!response.ok) {\r\n    console.log(response)\r\n    throw json({ message: 'Could not save event' },\r\n      { status: 500 });\r\n  }\r\n  return redirect('/events')\r\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACJ,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKN,YAAY;AAQlB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACzB,OAAOP,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAE;IAChBC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrB,MAAMtB,IAAI,CAAC;MAAEiC,OAAO,EAAE;IAAuB,CAAC,EAC5C;MAAEJ,MAAM,EAAE;IAAI,CAAC,CAAC;EACpB;EACA,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAS,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}